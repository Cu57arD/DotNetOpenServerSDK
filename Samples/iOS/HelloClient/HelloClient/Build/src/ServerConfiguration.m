//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/configuration/ServerConfiguration.java
//


#include "J2ObjC_source.h"
#include "ServerConfiguration.h"
#include "SessionLayerProtocol.h"
#include "TlsConfiguration.h"

#define ComUsOpenserverConfigurationServerConfiguration_IDLE_TIMEOUT 300
#define ComUsOpenserverConfigurationServerConfiguration_SOCKET_TIMEOUT 120

@interface ComUsOpenserverConfigurationServerConfiguration () {
 @public
  NSString *host_;
  jint port_;
  jint idleTimeout_;
  jint idleTimeoutInTicks_;
  jint socketTimeout_;
  jint socketTimeoutInTicks_;
  ComUsOpenserverConfigurationTlsConfiguration *tlsConfiguration_;
}

@end

J2OBJC_FIELD_SETTER(ComUsOpenserverConfigurationServerConfiguration, host_, NSString *)
J2OBJC_FIELD_SETTER(ComUsOpenserverConfigurationServerConfiguration, tlsConfiguration_, ComUsOpenserverConfigurationTlsConfiguration *)

J2OBJC_STATIC_FIELD_GETTER(ComUsOpenserverConfigurationServerConfiguration, IDLE_TIMEOUT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComUsOpenserverConfigurationServerConfiguration, SOCKET_TIMEOUT, jint)

@implementation ComUsOpenserverConfigurationServerConfiguration

- (instancetype)init {
  ComUsOpenserverConfigurationServerConfiguration_init(self);
  return self;
}

- (NSString *)getHost {
  return host_;
}

- (void)setHostWithNSString:(NSString *)value {
  host_ = value;
}

- (jint)getPort {
  return port_;
}

- (void)setPortWithInt:(jint)value {
  port_ = value;
}

- (jint)getIdleTimeout {
  return idleTimeout_;
}

- (void)setIdleTimeoutWithInt:(jint)value {
  idleTimeout_ = value;
  idleTimeoutInTicks_ = value * 1000;
}

- (jint)getSocketTimeout {
  return socketTimeout_;
}

- (void)setSocketTimeoutWithInt:(jint)value {
  socketTimeout_ = value;
  socketTimeoutInTicks_ = value * 1000;
}

- (jint)getIdleTimeoutInTicks {
  return idleTimeoutInTicks_;
}

- (jint)getSocketTimeoutInTicks {
  return socketTimeoutInTicks_;
}

- (ComUsOpenserverConfigurationTlsConfiguration *)getTlsConfiguration {
  return tlsConfiguration_;
}

- (void)setTlsConfigurationWithComUsOpenserverConfigurationTlsConfiguration:(ComUsOpenserverConfigurationTlsConfiguration *)value {
  tlsConfiguration_ = value;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ServerConfiguration", NULL, 0x1, NULL, NULL },
    { "getHost", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setHostWithNSString:", "setHost", "V", 0x1, NULL, NULL },
    { "getPort", NULL, "I", 0x1, NULL, NULL },
    { "setPortWithInt:", "setPort", "V", 0x1, NULL, NULL },
    { "getIdleTimeout", NULL, "I", 0x1, NULL, NULL },
    { "setIdleTimeoutWithInt:", "setIdleTimeout", "V", 0x1, NULL, NULL },
    { "getSocketTimeout", NULL, "I", 0x1, NULL, NULL },
    { "setSocketTimeoutWithInt:", "setSocketTimeout", "V", 0x1, NULL, NULL },
    { "getIdleTimeoutInTicks", NULL, "I", 0x1, NULL, NULL },
    { "getSocketTimeoutInTicks", NULL, "I", 0x1, NULL, NULL },
    { "getTlsConfiguration", NULL, "Lcom.us.openserver.configuration.TlsConfiguration;", 0x1, NULL, NULL },
    { "setTlsConfigurationWithComUsOpenserverConfigurationTlsConfiguration:", "setTlsConfiguration", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "IDLE_TIMEOUT_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = ComUsOpenserverConfigurationServerConfiguration_IDLE_TIMEOUT },
    { "SOCKET_TIMEOUT_", NULL, 0x1a, "I", NULL, NULL, .constantValue.asInt = ComUsOpenserverConfigurationServerConfiguration_SOCKET_TIMEOUT },
    { "host_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL,  },
    { "port_", NULL, 0x2, "I", NULL, NULL,  },
    { "idleTimeout_", NULL, 0x2, "I", NULL, NULL,  },
    { "idleTimeoutInTicks_", NULL, 0x2, "I", NULL, NULL,  },
    { "socketTimeout_", NULL, 0x2, "I", NULL, NULL,  },
    { "socketTimeoutInTicks_", NULL, 0x2, "I", NULL, NULL,  },
    { "tlsConfiguration_", NULL, 0x2, "Lcom.us.openserver.configuration.TlsConfiguration;", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _ComUsOpenserverConfigurationServerConfiguration = { 2, "ServerConfiguration", "com.us.openserver.configuration", NULL, 0x1, 13, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComUsOpenserverConfigurationServerConfiguration;
}

@end

void ComUsOpenserverConfigurationServerConfiguration_init(ComUsOpenserverConfigurationServerConfiguration *self) {
  (void) NSObject_init(self);
  self->host_ = @"localhost";
  self->port_ = ComUsOpenserverProtocolsSessionLayerProtocol_PORT;
  self->idleTimeout_ = ComUsOpenserverConfigurationServerConfiguration_IDLE_TIMEOUT;
  self->socketTimeout_ = ComUsOpenserverConfigurationServerConfiguration_SOCKET_TIMEOUT;
  self->tlsConfiguration_ = new_ComUsOpenserverConfigurationTlsConfiguration_init();
}

ComUsOpenserverConfigurationServerConfiguration *new_ComUsOpenserverConfigurationServerConfiguration_init() {
  ComUsOpenserverConfigurationServerConfiguration *self = [ComUsOpenserverConfigurationServerConfiguration alloc];
  ComUsOpenserverConfigurationServerConfiguration_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComUsOpenserverConfigurationServerConfiguration)
