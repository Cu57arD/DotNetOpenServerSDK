<?xml version="1.0" encoding="utf-8"?>
<topic id="ClientSideComponents.Android" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        This topic shows you how to create an Android application using the
        Windows Authentication Protocol, Keep-Alive Protocol and the sample Hello
        Protocol.
      </para>
      <para>
        The complete source code for this sample application can be found at:
        <externalLink>
          <linkText></linkText>
          <linkUri>https://github.com/UpperSetting/DotNetOpenServerSDK/tree/master/Samples/Android/HelloClient</linkUri>
          <linkTarget>_blank</linkTarget>
        </externalLink>
      </para>
      <autoOutline>0</autoOutline>
    </introduction>

    <section address="Application">
      <title>Create an Android Application using Android Studio</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Download
                  <externalLink>
                    <linkText>DotNetOpenServerSDK_JavaClient.zip</linkText>
                    <linkUri>http://github.com/UpperSetting/DotNetOpenServerSDK/releases</linkUri>
                    <linkTarget>_blank</linkTarget>
                  </externalLink>
                  from GitHub then extract the contents.
                </para>
              </content>
            </step>

            <step>
              <content>
                <para>
                  If you have not already downloaded Android Studio, click
                  <externalLink>
                    <linkText>here</linkText>
                    <linkUri>http://developer.android.com/sdk/index.html</linkUri>
                    <linkTarget>_blank</linkTarget>
                  </externalLink>
                  and you will be re-directed to the Android Studio download page. Once downloaded and installed, launch Android Studio.
                </para>
              </content>
            </step>
            
            <step>
              <content>
                <para>
                  Select <legacyBold>File > New Project</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Create New Project</legacyBold> form, specify an
                  application name, company domain and project location, then click
                  <legacyBold>Next</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Target Android Devices</legacyBold> page, verify
                  <legacyBold>Phone and Tablet</legacyBold> is checked, select the target minimum
                  SDK, then click <legacyBold>Next</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Add an activity to Mobile</legacyBold> page, verify
                  <legacyBold>Blank Activity</legacyBold> is selected, then click
                  <legacyBold>Next</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Customize the Activity</legacyBold> page, click
                  <legacyBold>Finish</legacyBold>.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>
    
    <section address="References">
      <title>Reference the DotNetOpenServer JAR Files</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Open Windows Explorer and navigate to the directory you previously extracted
                  the zip file contents then copy the following JAR files located in the
                  <legacyBold>bin\Java</legacyBold> sub-directory:
                </para>
                <list class="bullet">
                  <listItem><para>OpenServerClient.jar</para></listItem>
                  <listItem><para>HelloProtocol.jar</para></listItem>
                  <listItem><para>KeepAliveProtocol.jar</para></listItem>
                  <listItem><para>WinAuthProtocol.jar</para></listItem>
                </list>
                <para>
                  Paste the copied JAR files to the project's <legacyBold>app\libs</legacyBold>
                  directory.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Project</legacyBold> view, right click on the
                  <legacyBold>app</legacyBold> node then select <legacyBold>Open Module
                  Settings</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Project Structure</legacyBold> form, click the
                  <legacyBold>Dependencies</legacyBold> tab.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Dependencies</legacyBold> tab, click the plus sign button
                  then select <legacyBold>File dependency</legacyBold>.
                  From the <legacyBold>Select Path</legacyBold> form, expand the
                  <legacyBold>libs</legacyBold> node. Select the first JAR file. Repeat this
                  procedure for each of the remaining JAR files.
                </para>
              </content>
            </step>            
          </steps>
        </procedure>
      </content>
    </section>

    <section address="AddXml">
      <title>Create the User Interface</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Modify the <legacyBold>res\layout\activity_main.xml</legacyBold> to contain
                  controls to enter the server hostname and client username and password. For
                  example:
                </para>
                <mediaLink>
                  <image xlink:href="Android"/>
                </mediaLink>                
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="CreateClient">
      <title>Create an Instance of the Client</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  From the <legacyBold>Package Explorer</legacyBold>, expand your project, right
                  click <legacyBold>HelloClient.java</legacyBold> then select
                  <legacyBold>Open</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Add the following package statements:
                </para>
                <codeReference>Java#Import</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>main</legacyBold> function, create a new instance of the
                  HelloClient.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From within the constructor, create a
                  <legacyBold>com.us.openserver.configuration.ServerConfiguration</legacyBold>
                  then set the <legacyBold>ServerConfiguration.Host</legacyBold> property along
                  with any required SSL/TLS properties.
                </para>
                <codeReference>Java#ServerConfiguration</codeReference>
                <para>
                  Create a HashMap of <legacyBold>com.us.openserver.protocols.ProtocolConfiguration</legacyBold>
                  keyed by the unique protocol identifier that contains the following three protocols:
                </para>
                <list class="bullet">
                  <listItem>
                    <para>
                      com.us.openserver.protocols.winauth.WinAuthProtocolClient
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      com.us.openserver.protocols.keepalive.KeepAliveProtocol
                    </para>
                  </listItem>
                  <listItem>
                    <para>
                      com.us.cloudserver.protocols.hello.HelloProtocolClient
                    </para>
                  </listItem>
                </list>
                <codeReference>Java#HashMap</codeReference>
                <para>
                  Optionally, create a <legacyBold>com.us.openserver.Logger</legacyBold>. If one
                  is not created a <legacyBold>com.us.openserver.ConsoleLogger</legacyBold> will
                  be automatically created for you.
                </para>
                <para>
                  Finally, create the <legacyBold>com.us.cloudserver.Client</legacyBold> passing
                  in the <legacyBold>this</legacyBold> as the
                  <legacyBold>IClientObserver</legacyBold> parameter, the
                  <legacyBold>ServerConfiguration</legacyBold>, the HashMap of
                  <legacyBold>ProtocolConfiguration</legacyBold>s and, if created, the
                  <legacyBold>Logger</legacyBold>.
                </para>
                <codeReference>Java#ClientCreate</codeReference>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="Connect">
      <title>Connect to the Server</title>
      <content>
        <para>
          In the previous steps, we showed you how to create the
          <legacyBold>com.us.cloudserver.Client</legacyBold> object. Next,
          we will walk you through the process of connecting to the server.
        </para>
        <procedure>
          <title>To connect to the server:</title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Optionally, implement the <legacyBold>com.us.openserver.ILoggerObserver</legacyBold>
                  interface enabling the application to receive internal log messages.
                </para>
                <codeReference>Java#Logger</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  To receive notification when the connection is lost, modify the class to
                  implement <legacyBold>com.us.openserver.IClientObserver</legacyBold> then
                  implement the interface by adding the following method:
                </para>
                <codeReference>Java#ClientObserver</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Call <legacyBold>Client.connect</legacyBold> to connect to server.
                </para>
                <codeReference>Java#Connect</codeReference>
                <para>
                  To get a list of protocols running on the server call Client.getServerSupportedProtocolIds.
                </para>
                <codeReference>Java#GetProtocolIDs</codeReference>
                <para>
                  Initialize the
                  <legacyBold>com.us.openserver.protocols.winauth.WinAuthProtocolClient</legacyBold>
                  protocol then call
                  <legacyBold>WinAuthProtocolClient.authenticate</legacyBold>
                  to authenticate the connection.
                </para>
                <codeReference>Java#Authenticate</codeReference>
                <para>
                  Initialize the
                  <legacyBold>com.us.openserver.protocols.keepalive.KeepAliveProtocol</legacyBold>
                  to enable the client/server Keep-Alive (aka Heartbeat) protocol.
                </para>
                <codeReference>Java#KeepAlive</codeReference>
                <para>
                  Initialize the
                  <legacyBold>com.us.cloudserver.protocols.hello.HelloProtocolClient</legacyBold>
                  then call
                  <legacyBold>HelloProtocolClient.hello</legacyBold>.
                </para>
                <codeReference>Java#Hello</codeReference>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>
    
    <relatedTopics>
      <link xlink:href="ClientSideComponents"/>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
