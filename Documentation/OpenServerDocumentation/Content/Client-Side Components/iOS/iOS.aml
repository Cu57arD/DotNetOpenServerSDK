<?xml version="1.0" encoding="utf-8"?>
<topic id="ClientSideComponents.iOS" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        This topic shows you how to create an iOS application using the
        Windows Authentication Protocol, Keep-Alive Protocol and the sample Hello
        Protocol.
      </para>
      <alert>
        <para>
          To minimize our code base the DotNetOpenSever SDKs iOS Objective-C API is
          auto-generated from our Java source code by the
          <externalLink>
            <linkText>J2ObjC</linkText>
            <linkUri>http://j2objc.org/</linkUri>
            <linkTarget>_blank</linkTarget>
          </externalLink>
          open source project.
        </para>
      </alert>
    </introduction>

    <section address="Application">
      <title>Create an iOS Application using XCode</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">            
            <step>
              <content>
                <para>
                  If you have not already downloaded Xcode, click
                  <externalLink>
                    <linkText>here</linkText>
                    <linkUri>https://developer.apple.com/xcode/downloads/</linkUri>
                    <linkTarget>_blank</linkTarget>
                  </externalLink>
                  and you will be re-directed to the Apple Developer download page. Once downloaded, launch Xcode.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  In the Welcome window, click <legacyBold>Create a new Xcode
                  project</legacyBold> or choose <legacyBold>File > New > Project</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Choose a template for your new project</legacyBold> dialog
                  select <legacyBold>iOS > Application > Single View Application</legacyBold>.
                </para>
                <mediaLink>
                  <image xlink:href="iOSXCodeTemplate"/>
                </mediaLink>
                <para>
                  Click <legacyBold>Next</legacyBold>
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Choose options for your new project</legacyBold> dialog:
                </para>
                <list class="bullet">
                  <listItem>
                    <para>Set the <legacyBold>Product Name</legacyBold> to <legacyBold>HelloClient</legacyBold>.</para>
                  </listItem>
                  <listItem>
                    <para>Set the <legacyBold>Organization Name</legacyBold> to your company's name.</para>
                  </listItem>
                  <listItem>
                    <para>Set the <legacyBold>Organization Identifier</legacyBold> to <legacyBold>com.example</legacyBold>.</para>
                  </listItem>
                  <listItem>
                    <para>Set the <legacyBold>Language</legacyBold> to <legacyBold>Objective-C</legacyBold>.</para>
                  </listItem>
                  <listItem>
                    <para>Set the <legacyBold>Devices</legacyBold> to <legacyBold>Universal</legacyBold>.</para>
                  </listItem>
                  <listItem>
                    <para>Verify <legacyBold>Use Core Data</legacyBold> is unselected.</para>
                  </listItem>
                </list>
                <mediaLink>
                  <image xlink:href="iOSXCodeOptions"/>
                </mediaLink>
                <para>
                  Click <legacyBold>Next</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the next dialog that appears, choose the location to save your project
                  then click <legacyBold>Create</legacyBold>.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="References">
      <title>Add the DotNetOpenServer Objective-C API Source Code</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Download
                  <externalLink>
                    <linkText>DotNetOpenServerSDK_Objective-C_Client.zip</linkText>
                    <linkUri>http://github.com/UpperSetting/DotNetOpenServerSDK/releases</linkUri>
                    <linkTarget>_blank</linkTarget>
                  </externalLink>
                  from GitHub then extract the contents.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Project navigator</legacyBold> view, right click on the
                  <legacyBold>HelloClient</legacyBold> node then select <legacyBold> Add Files to
                  "HelloClient"...</legacyBold>.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the next dialog that appears, choose the location you previously extracted
                  the > DotNetOpenServer_Objective-C_Client.zip too then select the sub-directory
                  <legacyBold>src</legacyBold>. Check <legacyBold>Copy items if
                  needed</legacyBold>, select <legacyBold>Create groups</legacyBold>, check
                  <legacyBold>HelloClient</legacyBold>, then click <legacyBold>Add</legacyBold>.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="AddJ2ObjCReferences">
      <title>Reference the J2ObjC Source and Library Files</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Download
                  <externalLink>
                    <linkText>J2ObjC</linkText>
                    <linkUri>https://github.com/google/j2objc/releases</linkUri>
                    <linkTarget>_blank</linkTarget>
                  </externalLink>
                  from GitHub, create a target directory then extract the contents of the zip file.
                </para>
              </content>
            </step>
            <step>
              <content>
                <para>
                  From the <legacyBold>Project navigator</legacyBold> view, click on the
                  <legacyBold>HelloClient</legacyBold> node then select the <legacyBold>Build
                  Settings</legacyBold> tab. Make the the following changes (substitute the
                  directory you extracted the J2ObjC files too for $distribution-path):
                </para>
                <list class="ordered">
                  <listItem><para>In User Header Search Paths, add $distribution-path/include</para></listItem>
                  <listItem><para>In Library Search Paths, add $distribution-path/lib.</para></listItem>
                  <listItem><para>In Other Linker Flags, add -ljre_emul. (jre_emul is J2ObjC's JRE emulation library).</para></listItem>
                </list>
                <para>
                  Finally, select the <legacyBold>Build Phases</legacyBold> tab, open the Link phase and add:
                </para>
                  <list class="ordered">
                  <listItem><para>The libz.dylib library, needed to support java.util.zip.</para></listItem>
                  <listItem><para>The Security Framework, to support secure hash generation.</para></listItem>
                  <listItem><para>The libicucore.dylib library, needed to support java.text.</para></listItem>
                </list>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="UI">
      <title>Create the User Interface</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Modify the <legacyBold>Main.storyboard</legacyBold> to contain the
                  following controls: host text box, username text box, password text box and a
                  button. For example:
                </para>
                <mediaLink>
                  <image xlink:href="iOS"/>
                </mediaLink>                
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <section address="AddCode">
      <title>Add the User Interface Code</title>
      <content>
        <procedure>
          <title></title>
          <steps class="ordered">
            <step>
              <content>
                <para>
                  Create the <legacyBold>ComUsOpenserverConsoleLogger</legacyBold>, 
                  create the <legacyBold>ComUsOpenserverConfigurationServerConfiguration</legacyBold> then set any properties you want to override,
                  create the <legacyBold>ComUsOpenserverProtocolsProtocolConfiguration</legacyBold> objects then add them to A HashMap keyed with the each unique protocol identifier,
                  create the <legacyBold>ComUsOpenserverClient</legacyBold>,
                  connect using the <legacyBold>ComUsOpenserverClient.connect</legacyBold> method,
                  authenticate using the <legacyBold>ComUsOpenserverProtocolsWinauthWinAuthProtocolClient</legacyBold>,
                  initialize the <legacyBold>ComUsOpenserverProtocolsKeepaliveKeepAliveProtocol</legacyBold>,
                  initialize the <legacyBold>ComUsOpenserverProtocolsHelloHelloProtocolClient</legacyBold>,
                  finally, call <legacyBold>ComUsOpenserverProtocolsHelloHelloProtocolClient.helloWithNSString(String userName)</legacyBold>.
                  For example:
                </para>
                <para>ViewController.h</para>
                <codeReference>iOS#CodeH</codeReference>
                <para>ViewController.m</para>
                <codeReference>iOS#CodeM</codeReference>
              </content>
            </step>
            <step>
              <content>
                <para>
                  Compile and run the application.
                </para>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="ClientSideComponents"/>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
