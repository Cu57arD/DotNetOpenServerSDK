//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./com/us/openserver/protocols/CapabilitiesProtocol.java
//

#ifndef _ComUsOpenserverProtocolsCapabilitiesProtocol_H_
#define _ComUsOpenserverProtocolsCapabilitiesProtocol_H_

#include "J2ObjC_header.h"
#include "com/us/openserver/protocols/ProtocolBase.h"

@class ComUsOpenserverLevelEnum;
@class ComUsOpenserverProtocolsBinaryReader;
@class ComUsOpenserverSessionSession;
@class IOSIntArray;

#define ComUsOpenserverProtocolsCapabilitiesProtocol_PROTOCOL_IDENTIFIER 0
#define ComUsOpenserverProtocolsCapabilitiesProtocol_TIMEOUT 120000

@interface ComUsOpenserverProtocolsCapabilitiesProtocol : ComUsOpenserverProtocolsProtocolBase

#pragma mark Public

- (instancetype)initWithComUsOpenserverSessionSession:(ComUsOpenserverSessionSession *)session;

- (IOSIntArray *)getRemoteSupportedProtocolIds;

- (void)onPacketReceivedWithComUsOpenserverProtocolsBinaryReader:(ComUsOpenserverProtocolsBinaryReader *)br;

- (void)sendErrorWithInt:(jint)protocolId
            withNSString:(NSString *)message;

#pragma mark Protected

- (void)logWithComUsOpenserverLevelEnum:(ComUsOpenserverLevelEnum *)level
                           withNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(ComUsOpenserverProtocolsCapabilitiesProtocol)

J2OBJC_STATIC_FIELD_GETTER(ComUsOpenserverProtocolsCapabilitiesProtocol, PROTOCOL_IDENTIFIER, jint)

J2OBJC_STATIC_FIELD_GETTER(ComUsOpenserverProtocolsCapabilitiesProtocol, TIMEOUT, jint)

FOUNDATION_EXPORT void ComUsOpenserverProtocolsCapabilitiesProtocol_initWithComUsOpenserverSessionSession_(ComUsOpenserverProtocolsCapabilitiesProtocol *self, ComUsOpenserverSessionSession *session);

FOUNDATION_EXPORT ComUsOpenserverProtocolsCapabilitiesProtocol *new_ComUsOpenserverProtocolsCapabilitiesProtocol_initWithComUsOpenserverSessionSession_(ComUsOpenserverSessionSession *session) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComUsOpenserverProtocolsCapabilitiesProtocol)

#endif // _ComUsOpenserverProtocolsCapabilitiesProtocol_H_
